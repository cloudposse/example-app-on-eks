repositories:
# Cloud Posse incubator repo of helm charts
- name: "cloudposse-incubator"
  url: "https://charts.cloudposse.com/incubator/"

releases:
#
# References:
#   - https://github.com/cloudposse/charts/blob/master/incubator/monochart
#
- name: '{{ requiredEnv "RELEASE_NAME" }}'
  labels:
    color: "{{ requiredEnv "COLOR" }}"
    pull-request: "true"
  chart: "cloudposse-incubator/monochart"
  version: "0.12.0"
  wait: true
  force: true
  recreatePods: false
  values:
    - fullnameOverride: "example-{{ requiredEnv "COLOR" }}"
      image:
        repository: '{{ env "IMAGE_NAME" | default "cloudposse/example-app" }}'
        tag: '{{ env "IMAGE_TAG" | default "0.1.0" }}'
        pullPolicy: Always
        pullSecrets:
          - "{{ requiredEnv "RELEASE_NAME" }}-pull-secret-dockercfg "
      replicaCount: 5
      # Deployment configuration
      deployment:
        enabled: true
        strategy:
          type: "RollingUpdate"
          rollingUpdate:
            maxUnavailable: 2
        revisionHistoryLimit: 10

      # Configuration Settings
      configMaps:
        default:
          enabled: true
          env:
            # Color to deploy
            #COLOR: "#0099ff" # Blue
            #COLOR: "#009900"  # Green
            COLOR: "{{ env "COLOR" }}"

      # Service endpoint 
      service:
        enabled: true
        type: ClusterIP
        ports:
          default:
            internal: 8080
            external: 80

      ingress:
        default:
          enabled: true
          labels:
            dns: "route53"
          annotations:
            kubernetes.io/ingress.class: nginx
            kubernetes.io/tls-acme: "true"
            external-dns.alpha.kubernetes.io/target: '{{ requiredEnv "NGINX_INGRESS_HOSTNAME" }}'
            external-dns.alpha.kubernetes.io/ttl: "60"
          hosts:
            ### Required: APP_HOST;
            '{{ env "APP_HOST" }}': /
          tls:
              ### Optional: ATLANTIS_TLS_SECRET_NAME;
            - secretName: '{{ env "APP_TLS_SECRET_NAME" | default (requiredEnv "COLOR" | printf "example-%s-server-tls") }}'
              hosts:
              ### Required: APP_HOST;
              - '{{ env "APP_HOST" }}'
      
      probes:
        # Probe that ensures service is healthy
        livenessProbe:
          httpGet:
            path: /healthz
            port: default
            scheme: HTTP
          periodSeconds: 3
          initialDelaySeconds: 3
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2
        
        # Probe that ensures service has started
        readinessProbe:
          httpGet:
            path: /healthz
            port: default
            scheme: HTTP
          periodSeconds: 3
          initialDelaySeconds: 3
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2

      resources:
        requests:
          memory: 10Mi
          cpu: 100m
        limits:
          memory: 10Mi
          cpu: 100m
